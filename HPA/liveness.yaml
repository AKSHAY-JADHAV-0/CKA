apiVersion: v1
kind: Pod
metadata:
  name: liveness-app
spec:
  containers:
  - name: my-container
    image: nginx
    ports:
    - containerPort: 80
    resources:
      requests:
        cpu: "100m"       # 100 millicores of CPU
        memory: "250Mi"   # 250 MiB of memory
      limits:
        cpu: "100m"       # 100 millicores of CPU
        memory: "250Mi"   # 250 MiB of memory
    livenessProbe:
      httpGet:
        path: /healthz
        port: 80
      initialDelaySeconds: 3   #The probe waits for 3 seconds before performing the first check after the container starts.
      periodSeconds: 10  #The probe runs every 10 seconds to check the health.
      failureThreshold: 3  #After 3 consecutive failures, the container is considered unhealthy, and Kubernetes will restart it.


---
apiVersion: v1
kind: Pod
metadata:
  name: tcp-liveness-app
spec:
  containers:
  - name: my-container
    image: nginx
    ports:
    - containerPort: 80
    resources:
      requests:
        cpu: "100m"        # Minimum 100 millicores
        memory: "200Mi"    # Minimum 200 MiB of memory
      limits:
        cpu: "200m"        # Maximum 200 millicores
        memory: "400Mi"    # Maximum 400 MiB of memory
    livenessProbe:
      tcpSocket:
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 15
      failureThreshold: 3

---
apiVersion: v1
kind: Pod
metadata:
  name: exec-liveness-app
spec:
  containers:
  - name: my-container
    image: busybox
    args:
    - /bin/sh
    - -c
    - touch /tmp/healthy; sleep 30; rm -f /tmp/healthy; sleep 600
    resources:
      requests:
        cpu: "50m"         # Minimum 50 millicores
        memory: "100Mi"    # Minimum 100 MiB of memory
      limits:
        cpu: "100m"        # Maximum 100 millicores
        memory: "200Mi"    # Maximum 200 MiB of memory
    livenessProbe:
      exec:
        command:
        - cat
        - /tmp/healthy
      initialDelaySeconds: 5
      periodSeconds: 5
      failureThreshold: 3

